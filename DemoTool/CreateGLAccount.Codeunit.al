codeunit 101015 "Create G/L Account"
{

    trigger OnRun()
    begin
        DemoDataSetup.Get();
        InsertData('0000', X0000, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('0005', X0005, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('0010', X0010, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0090', X0090, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0099', X0099, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('0100', X0100, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('0110', X0110, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0120', X0120, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0130', X0130, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0150', X0150, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0180', X0180, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0190', X0190, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0199', X0199, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('0200', X0200, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('0210', X0210, 0, 1, 0, '', 0, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('0220', X0220, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0230', X0230, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0240', X0240, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0260', X0260, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0290', X0290, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0300', X0300, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0399', X0399, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('0400', X0400, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('0410', X0410, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0450', X0450, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0490', X0490, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0500', X0500, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0510', X0510, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0520', X0520, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0530', X0530, 0, 1, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('0540', X0540, 0, 1, 0, '', 2, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('0550', X0550, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0629', X0629, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('0630', X0630, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('0640', X0640, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0645', X0645, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0650', X0650, 0, 1, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('0660', X0660, 0, 1, 0, '', 2, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('0670', X0670, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0679', X0679, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('0680', X0680, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('0690', X0690, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0695', X0695, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0699', X0699, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('0700', X0700, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('0710', X0710, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0720', X0720, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0790', X0790, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0799', X0799, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('0800', X0800, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('0810', X0810, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0820', X0820, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0900', X0900, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0910', X0910, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0920', X0920, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0930', X0930, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0940', X0940, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0950', X0950, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0995', X0995, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('0998', X0998, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1000', X1000, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1005', X1005, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1010', X1010, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1020', X1020, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1099', X1099, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1100', X1100, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1110', X1110, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1120', X1120, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1130', X1130, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1199', X1199, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1200', X1200, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1210', X1210, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1299', X1299, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1300', X1300, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1310', X1310, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1320', X1320, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1330', X1330, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1399', X1399, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1400', X1400, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1410', X1410, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1420', X1420, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1421', X1421, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1430', X1430, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1431', X1431, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1499', X1499, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1500', X1500, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1510', X1510, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1520', X1520, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1599', X1599, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1600', X1600, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1610', X1610, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1620', X1620, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1630', X1630, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1699', X1699, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1700', X1700, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1710', X1710, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1799', X1799, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1800', X1800, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1810', X1810, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1899', X1899, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1998', X1998, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2000', X2000, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2001', X2001, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2005', X2005, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2010', X2010, 0, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2020', X2020, 0, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2030', X2030, 0, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2040', X2040, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2050', X2050, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2070', X2070, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2080', X2080, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2090', X2090, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2100', X2100, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2180', X2180, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2190', X2190, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2200', X2200, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2280', X2280, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2290', X2290, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2300', X2300, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2350', X2350, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2390', X2390, 0, 1, 0, '', 2, DemoDataSetup.DomesticCode(), DemoDataSetup.ServicesCode(), '', '', true);
        InsertData('2499', X2499, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2500', X2500, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2510', X2510, 0, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2520', X2520, 0, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2530', X2530, 0, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2540', X2540, 0, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2550', X2550, 0, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2560', X2560, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2570', X2570, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2598', X2598, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2599', X2599, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2600', X2600, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2650', X2650, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2680', X2680, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2699', X2699, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2700', X2700, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2710', X2710, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2730', X2730, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2740', X2740, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2770', X2770, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2780', X2780, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2790', X2790, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2800', X2800, 0, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2810', X2810, 0, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2820', X2820, 0, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2899', X2899, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2900', X2900, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2910', X2910, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2950', X2950, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2995', X2995, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2998', X2998, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3000', X3000, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3005', X3005, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3010', X3010, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3020', X3020, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3030', X3030, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3060', X3060, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3070', X3070, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3080', X3080, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3099', X3099, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3100', X3100, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3110', X3110, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3120', X3120, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3150', X3150, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3160', X3160, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3170', X3170, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3199', X3199, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3200', X3200, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3210', X3210, 0, 1, 0, '', 2, DemoDataSetup.DomesticCode(), DemoDataSetup.ServicesCode(), '', '', true);
        InsertData('3220', X3220, 0, 1, 0, '', 2, DemoDataSetup.DomesticCode(), DemoDataSetup.ServicesCode(), '', '', true);
        InsertData('3230', X3230, 0, 1, 0, '', 2, DemoDataSetup.DomesticCode(), DemoDataSetup.ServicesCode(), '', '', true);
        InsertData('3290', X3290, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3300', X3300, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3310', X3310, 0, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3320', X3320, 0, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3330', X3330, 0, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3360', X3360, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3370', X3370, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3499', X3499, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3500', X3500, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3510', X3510, 0, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3520', X3520, 0, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3530', X3530, 0, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3540', X3540, 0, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3550', X3550, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3560', X3560, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3570', X3570, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3580', X3580, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3599', X3599, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3600', X3600, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3610', X3610, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3620', X3620, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3630', X3630, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3640', X3640, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3650', X3650, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3660', X3660, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3670', X3670, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3699', X3699, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3700', X3700, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3710', X3710, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3900', X3900, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3997', X3997, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3998', X3998, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('4000', X4000, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4005', X4005, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4006', X4006, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4007', X4007, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4010', X4010, 0, 0, 0, '', 2, DemoDataSetup.DomesticCode(), DemoDataSetup.RetailCode(), '', '', true);
        InsertData('4020', X4020, 0, 0, 0, '', 2, DemoDataSetup.ExportCode(), DemoDataSetup.RetailCode(), '', '', true);
        InsertData('4030', X4030, 0, 0, 0, '', 2, DemoDataSetup.EUCode(), DemoDataSetup.RetailCode(), '', '', true);
        InsertData('4040', X4040, 0, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4050', X4050, 0, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4099', X4099, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4100', X4100, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4110', X4110, 0, 0, 0, '', 2, DemoDataSetup.DomesticCode(), DemoDataSetup.RawMatCode(), '', '', true);
        InsertData('4120', X4120, 0, 0, 0, '', 2, DemoDataSetup.ExportCode(), DemoDataSetup.RawMatCode(), '', '', true);
        InsertData('4130', X4130, 0, 0, 0, '', 2, DemoDataSetup.EUCode(), DemoDataSetup.RawMatCode(), '', '', true);
        InsertData('4199', X4199, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4200', X4200, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4210', X4210, 0, 0, 0, '', 2, DemoDataSetup.DomesticCode(), DemoDataSetup.ServicesCode(), '', '', true);
        InsertData('4220', X4220, 0, 0, 0, '', 2, DemoDataSetup.ExportCode(), DemoDataSetup.ServicesCode(), '', '', true);
        InsertData('4230', X4230, 0, 0, 0, '', 2, DemoDataSetup.EUCode(), DemoDataSetup.ServicesCode(), '', '', true);
        InsertData('4239', X4239, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4240', X4240, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4250', X4250, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4260', X4260, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4269', X4269, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4270', X4270, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4280', X4280, 0, 0, 0, '', 2, DemoDataSetup.DomesticCode(), DemoDataSetup.ServicesCode(), '', '', true);
        InsertData('4299', X4299, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4300', X4300, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4310', X4310, 0, 0, 0, '', 2, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('4320', X4320, 0, 0, 0, '', 2, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('4330', X4330, 0, 0, 0, '', 2, DemoDataSetup.DomesticCode(), DemoDataSetup.ServicesCode(), '', '', true);
        InsertData('4395', X4395, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4396', X4396, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4400', X4400, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4410', X4410, 0, 0, 0, '', 2, DemoDataSetup.DomesticCode(), DemoDataSetup.RetailCode(), '', '', true);
        InsertData('4420', X4420, 0, 0, 0, '', 2, DemoDataSetup.DomesticCode(), DemoDataSetup.RetailCode(), '', '', true);
        InsertData('4430', X4430, 0, 0, 0, '', 2, DemoDataSetup.ExportCode(), DemoDataSetup.RetailCode(), '', '', true);
        InsertData('4440', X4440, 0, 0, 0, '', 2, DemoDataSetup.EUCode(), DemoDataSetup.RetailCode(), '', '', true);
        InsertData('4450', X4450, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4455', X4455, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4498', X4498, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4499', X4499, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4500', X4500, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4510', X4510, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4580', X4580, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4599', X4599, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4600', X4600, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4610', X4610, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4620', X4620, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4630', X4630, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4640', X4640, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4650', X4650, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4700', X4700, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4710', X4710, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4760', X4760, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4800', X4800, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4810', X4810, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4820', X4820, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4830', X4830, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4860', X4860, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4870', X4870, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4880', X4880, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4890', X4890, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4900', X4900, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4997', X4997, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4998', X4998, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5000', X5000, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5005', X5005, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5010', X5010, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5020', X5020, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5030', X5030, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5040', X5040, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5045', X5045, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5050', X5050, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5060', X5060, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5070', X5070, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5080', X5080, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5099', X5099, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5105', X5105, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5110', X5110, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5120', X5120, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5130', X5130, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5140', X5140, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5145', X5145, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5199', X5199, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5200', X5200, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5210', X5210, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5230', X5230, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5240', X5240, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5245', X5245, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5249', X5249, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5250', X5250, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5260', X5260, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5270', X5270, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5280', X5280, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5299', X5299, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5300', X5300, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5310', X5310, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5320', X5320, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5330', X5330, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5340', X5340, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5350', X5350, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5399', X5399, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5400', X5400, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5410', X5410, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5420', X5420, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5430', X5430, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5440', X5440, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5450', X5450, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5460', X5460, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5499', X5499, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5500', X5500, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5510', X5510, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.RetailCode(), '', '', true);
        InsertData('5520', X5520, 0, 0, 0, '', 1, DemoDataSetup.ExportCode(), DemoDataSetup.RetailCode(), '', '', true);
        InsertData('5530', X5530, 0, 0, 0, '', 1, DemoDataSetup.EUCode(), DemoDataSetup.RetailCode(), '', '', true);
        InsertData('5540', X5540, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.RawMatCode(), '', '', true);
        InsertData('5550', X5550, 0, 0, 0, '', 1, DemoDataSetup.ExportCode(), DemoDataSetup.RawMatCode(), '', '', true);
        InsertData('5560', X5560, 0, 0, 0, '', 1, DemoDataSetup.EUCode(), DemoDataSetup.RawMatCode(), '', '', true);
        InsertData('5599', X5599, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5700', X5700, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5710', X5710, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('5720', X5720, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('5799', X5799, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5800', X5800, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5830', X5830, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5835', X5835, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5899', X5899, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5998', X5998, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('6000', X6000, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('6005', X6005, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('6010', X6010, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('6040', X6040, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('6199', X6199, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('6200', X6200, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('6210', X6210, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('6240', X6240, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('6399', X6399, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('6400', X6400, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('6410', X6410, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('6420', X6420, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('6450', X6450, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('6455', X6455, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('6499', X6499, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('6500', X6500, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('6510', X6510, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('6550', X6550, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('6599', X6599, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('6600', X6600, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('6610', X6610, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('6620', X6620, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('6630', X6630, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('6640', X6640, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('6700', X6700, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('6890', X6890, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('6997', X6997, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('6998', X6998, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('7000', X7000, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('7005', X7005, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('7010', X7010, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7020', X7020, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7030', X7030, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7040', X7040, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7050', X7050, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7060', X7060, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7099', X7099, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('7100', X7100, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('7110', X7110, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7120', X7120, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7130', X7130, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7140', X7140, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7150', X7150, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7160', X7160, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7199', X7199, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('7200', X7200, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('7210', X7210, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7220', X7220, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7230', X7230, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7240', X7240, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7250', X7250, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7260', X7260, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7270', X7270, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7280', X7280, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7299', X7299, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('7300', X7300, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('7310', X7310, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7320', X7320, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7330', X7330, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7340', X7340, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7350', X7350, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7360', X7360, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7370', X7370, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7380', X7380, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7390', X7390, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7399', X7399, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('7400', X7400, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('7410', X7410, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7499', X7499, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('7500', X7500, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('7510', X7510, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7599', X7599, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('7600', X7600, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('7610', X7610, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7620', X7620, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7630', X7630, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7635', X7635, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7636', X7636, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7637', X7637, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7650', X7650, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7660', X7660, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.NoVATCode(), '', '', true);
        InsertData('7680', X7680, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7681', X7681, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7682', X7682, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7683', X7683, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7690', X7690, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7699', X7699, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('7700', X7700, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('7710', X7710, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7720', X7720, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7730', X7730, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7740', X7740, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7760', X7760, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7770', X7770, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7780', X7780, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7790', X7790, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7800', X7800, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7810', X7810, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7812', X7812, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7815', X7815, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7818', X7818, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7820', X7820, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7830', X7830, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7850', X7850, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7851', X7851, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7852', X7852, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7853', X7853, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7854', X7854, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7855', X7855, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7860', X7860, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7870', X7870, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7882', X7882, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7890', X7890, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7899', X7899, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('7998', X7998, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('8000', X8000, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('8005', X8005, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('8010', X8010, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8020', X8020, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8030', X8030, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8040', X8040, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8050', X8050, 0, 0, 0, '', 2, DemoDataSetup.DomesticCode(), DemoDataSetup.NoVATCode(), '', '', true);
        InsertData('8060', X8060, 0, 0, 0, '', 2, DemoDataSetup.DomesticCode(), DemoDataSetup.NoVATCode(), '', '', true);
        InsertData('8070', X8070, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8090', X8090, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8100', X8100, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8140', X8140, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8150', X8150, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8160', X8160, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8170', X8170, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8180', X8180, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8185', X8185, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8260', X8260, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8265', X8265, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8270', X8270, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8280', X8280, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8285', X8285, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8290', X8290, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8300', X8300, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8310', X8310, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8320', X8320, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.NoVATCode(), '', '', true);
        InsertData('8340', X8340, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8350', X8350, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8360', X8360, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8370', X8370, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8399', X8399, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('8400', X8400, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('8410', X8410, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8450', X8450, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8497', X8497, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('8500', X8500, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('8510', X8510, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8520', X8520, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8597', X8597, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('8600', X8600, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('8610', X8610, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8630', X8630, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8810', X8810, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8820', X8820, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8830', X8830, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8897', X8897, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('8998', X8998, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('9000', X9000, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('9010', X9010, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('9020', X9020, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('9350', X9350, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('9390', X9390, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('9400', X9400, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('9510', X9510, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('9520', X9520, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('9600', X9600, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('9800', X9800, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('9850', X9850, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('9890', X9890, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('9999', X9999, 4, 1, 0, '', 0, '', '', '', '', false);
        GLAccIndent.Indent();
        AddCategoriesToGLAccounts();
    end;

    var
        DemoDataSetup: Record "Demo Data Setup";
        GLAccIndent: Codeunit "G/L Account-Indent";
        XFeesandChargesRecEUTxt: Label 'Fees and Charges Rec. - EU';
        X0000: Label 'FIXED ASSETS';
        X0005: Label 'Commissioning an operation';
        X0010: Label 'Commissioning the operation';
        X0090: Label 'Accumulated depreciation';
        X0099: Label 'Commissioning total';
        X0100: Label 'Intangible assets';
        X0110: Label 'Concessions';
        X0120: Label 'Patent and license rights';
        X0130: Label 'Data processing programs';
        X0150: Label 'Company value';
        X0180: Label 'Advance payments for intangible assets';
        X0190: Label 'Accumulated depreciation';
        X0199: Label 'Total intangible assets';
        X0200: Label 'Real estate';
        X0210: Label 'Developed land';
        X0220: Label 'Operational building';
        X0230: Label 'Acquisitions during the year';
        X0240: Label 'Disposals during the year';
        X0260: Label 'Investment in leased building';
        X0290: Label 'Accumulated depreciation booked';
        X0300: Label 'Undeveloped land';
        X0399: Label 'Total real estate';
        X0400: Label 'Operating equipment';
        X0410: Label 'Machinery and equipment';
        X0450: Label 'Low-value machinery';
        X0490: Label 'Accumulated depreciation';
        X0500: Label 'Office equipment';
        X0510: Label 'Business facilities';
        X0520: Label 'Office machines, EDP';
        X0530: Label 'Acquisitions during the year';
        X0540: Label 'Disposals during the year';
        X0550: Label 'Accum. Depreciation of building';
        X0629: Label 'Total operating equipment';
        X0630: Label 'Vehicle fleet';
        X0640: Label 'Car';
        X0645: Label 'Truck';
        X0650: Label 'Acquisitions during the year';
        X0660: Label 'Disposals during the year';
        X0670: Label 'Accum. Depreciation';
        X0679: Label 'Total vehicle fleet';
        X0680: Label 'Other facilities';
        X0690: Label 'Low-value assets (operational and bus. facilities)';
        X0695: Label 'Accumulated depreciation';
        X0699: Label 'Total other facilities';
        X0700: Label 'Advance payments made/facilities under constr.';
        X0710: Label 'Advance payments made for tangible fixed assets';
        X0720: Label 'Facilities under construction';
        X0790: Label 'Accumulated depreciation';
        X0799: Label 'Total adv. paym. made/facilities under constr.';
        X0800: Label 'Financial assets';
        X0810: Label 'Equity interests in associated companies';
        X0820: Label 'Other equity interests';
        X0900: Label 'Company shares or equity interests';
        X0910: Label 'Investment securities';
        X0920: Label 'Securities provisions for severance pay';
        X0930: Label 'Securities provisions for pension plan';
        X0940: Label 'Advance payments made for financial assets';
        X0950: Label 'Accumulated depreciation';
        X0995: Label 'Total financial assets';
        X0998: Label 'TOTAL FIXED ASSETS';
        X1000: Label 'SUPPLIES';
        X1005: Label 'Purchase settlement';
        X1010: Label 'Purchase settlement';
        X1020: Label 'Opening inventory';
        X1099: Label 'Total purchase settlement';
        X1100: Label 'Raw materials';
        X1110: Label 'Raw material supply';
        X1120: Label 'Raw material supply (interim)';
        X1130: Label 'Raw materials post receipt (interim)';
        X1199: Label 'Total raw materials';
        X1200: Label 'Parts purchased';
        X1210: Label 'Parts purchased';
        X1299: Label 'Total parts purchased';
        X1300: Label 'Auxiliaries, operating materials';
        X1310: Label 'Auxiliaries supply';
        X1320: Label 'Operating materials supply';
        X1330: Label 'Fuel oil supply';
        X1399: Label 'Total auxiliaries, operating materials';
        X1400: Label 'Work in process';
        X1410: Label 'Work in process';
        X1420: Label 'Cost work in process';
        X1421: Label 'Anticipated cost work in process';
        X1430: Label 'Sales work in process';
        X1431: Label 'Anticipated sales work in process';
        X1499: Label 'Total work in process';
        X1500: Label 'Finished goods';
        X1510: Label 'Finished goods';
        X1520: Label 'Finished goods (interim)';
        X1599: Label 'Total finished goods';
        X1600: Label 'Goods';
        X1610: Label 'Supply trade goods';
        X1620: Label 'Supply trade goods (interim)';
        X1630: Label 'Trade goods post receipt (interim)';
        X1699: Label 'Total goods';
        X1700: Label 'Service not billable yet';
        X1710: Label 'Service not billable yes';
        X1799: Label 'Total services not billable yet';
        X1800: Label 'Advance payments made';
        X1810: Label 'Advance payments made for supplies';
        X1899: Label 'Total advance payments made';
        X1998: Label 'TOTAL SUPPLIES';
        X2000: Label 'Other current assets';
        X2001: Label 'Receivables';
        X2005: Label 'Trade receivables';
        X2010: Label 'Trade receivables domestic';
        X2020: Label 'Trade receivables foreign';
        X2030: Label 'Receivables intercompany';
        X2040: Label 'Receivables cash on delivery';
        X2050: Label 'Change of ownership';
        X2070: Label 'Interim account advance payments received';
        X2080: Label 'Individual loss reserves for domestic receivables';
        X2090: Label 'Blanket loss reserves for domestic receivables';
        X2100: Label 'Trade receivables intra-community';
        X2180: Label 'Indiv. loss reserves for intra-community receivab.';
        X2190: Label 'Blanket loss reserves for intra-community receiv.';
        X2200: Label 'Trade receivables export';
        X2280: Label 'Individual loss reserves for receivables export';
        X2290: Label 'Blanket loss reserves for receivables export';
        X2300: Label 'Other receivables';
        X2350: Label 'Granted loan';
        X2390: Label 'Other advance payments made';
        X2499: Label 'Total trade receivables';
        X2500: Label 'Receivables from offsetting of levies';
        X2510: Label 'Purchase VAT 10%';
        X2520: Label 'Purchase VAT 20%';
        X2530: Label 'Purchase VAT  acquisition 10%';
        X2540: Label 'Purchase VAT  acquisition 20%';
        X2550: Label 'Import sales tax';
        X2560: Label 'Purchase VAT clearing account';
        X2570: Label 'Capital returns tax (allowable on income tax)';
        X2598: Label 'Total accounts receivable offsetting of levies';
        X2599: Label 'Total accounts receivable';
        X2600: Label 'Securities';
        X2650: Label 'Marketable securities';
        X2680: Label 'endorsed, ceded bill of exchange';
        X2699: Label 'Total securities';
        X2700: Label 'Cash and bank';
        X2710: Label 'Cash';
        X2730: Label 'Postage stamp';
        X2740: Label 'Revenue stamps';
        X2770: Label 'Settlement account cash bank';
        X2780: Label 'Checks received';
        X2790: Label 'Accounts receivable from credit card organization';
        X2800: Label 'Bank, LCY';
        X2810: Label 'Bank, currencies';
        X2820: Label 'Giro account';
        X2899: Label 'Total cash and bank';
        X2900: Label 'Prepaid expenses';
        X2910: Label 'Accruals';
        X2950: Label 'Borrowing costs';
        X2995: Label 'Total prepaid expenses';
        X2998: Label 'TOTAL OTHER CURRENT ASSETS';
        X3000: Label 'LIABILITIES, PROVISIONS';
        X3005: Label 'Provisions ';
        X3010: Label 'Provisions for severance payments';
        X3020: Label 'Provisions for pensions';
        X3030: Label 'Provisions for corporate tax';
        X3060: Label 'Provisions for warranties';
        X3070: Label 'Provisions for compensation for damage';
        X3080: Label 'Provisions for legal and consultancy expenses';
        X3099: Label 'Total provisions';
        X3100: Label 'Amounts owed to credit / financial institutions';
        X3110: Label 'Bank (with credit limit)';
        X3120: Label 'Checks (issued)';
        X3150: Label 'Loan';
        X3160: Label 'Mortgage';
        X3170: Label 'Settlement account credit cards';
        X3199: Label 'Total amounts owed to credit/financ. institutions';
        X3200: Label 'Advance payments received';
        X3210: Label 'Advance payments received';
        X3220: Label 'Hardware contracts paid in advance';
        X3230: Label 'Software contracts paid in advance';
        X3290: Label 'Total advance payments received';
        X3300: Label 'Payables to vendors';
        X3310: Label 'Vendors, domestic';
        X3320: Label 'Vendors, foreign';
        X3330: Label 'Vendors, intercompany';
        X3360: Label 'Note payable';
        X3370: Label 'Interim account advance payments made';
        X3499: Label 'Total payables to vendors';
        X3500: Label 'Tax liabilities';
        X3510: Label 'Sales tax 10%';
        X3520: Label 'Sales tax 20%';
        X3530: Label 'Sales tax profit and income tax 10%';
        X3540: Label 'Sales tax profit and income tax 20%';
        X3550: Label 'Tax Office - tax payable';
        X3560: Label 'Sales tax clearing account';
        X3570: Label 'Production order payroll tax, profit, D/P';
        X3580: Label 'Settlement account Tax Office';
        X3599: Label 'Total liabilities from taxes';
        X3600: Label 'Payables related to social security';
        X3610: Label 'Settlement account social insurance';
        X3620: Label 'Settlement account local tax';
        X3630: Label 'Settlement account wages + salaries';
        X3640: Label 'Tax payments withheld';
        X3650: Label 'Payment of tax arrears';
        X3660: Label 'Payroll tax payments';
        X3670: Label 'Vacation compensation payments';
        X3699: Label 'Total social security';
        X3700: Label 'Other liabilities and deferrals';
        X3710: Label 'Other liabilities';
        X3900: Label 'Deferred income';
        X3997: Label 'Total other liabilities';
        X3998: Label 'TOTAL LIABILITIES, PROVISIONS';
        X4000: Label 'OPERATING INCOME';
        X4005: Label 'Revenues and revenue reduction';
        X4006: Label 'Revenues';
        X4007: Label 'Sales revenues trade';
        X4010: Label 'Sales revenues trade domestic';
        X4020: Label 'Sales revenues trade export';
        X4030: Label 'Sales revenues trade EU';
        X4040: Label 'Project sales';
        X4050: Label 'Project sales correction';
        X4099: Label 'Total sales revenues trade';
        X4100: Label 'Sales revenues raw material';
        X4110: Label 'Sales revenues raw material domestic';
        X4120: Label 'Sales revenues raw material export';
        X4130: Label 'Sales revenues raw material EU';
        X4199: Label 'Total sales revenues raw material';
        X4200: Label 'Sales revenues resources';
        X4210: Label 'Sales revenues resources domestic';
        X4220: Label 'Sales revenues resources export';
        X4230: Label 'Sales revenues resources EU';
        X4239: Label 'Total sales revenues resources';
        X4240: Label 'Project revenues';
        X4250: Label 'Project revenues';
        X4260: Label 'Other project revenues';
        X4269: Label 'Total project revenues';
        X4270: Label 'Revenues service contracts';
        X4280: Label 'Revenue service contract';
        X4299: Label 'Total service contracts';
        X4300: Label 'Charges and interest';
        X4310: Label 'Service charges';
        X4320: Label 'Service interest';
        X4330: Label 'Consulting fees';
        X4395: Label 'Total charges and interest';
        X4396: Label 'Total revenues';
        X4400: Label 'Revenue adjustments';
        X4410: Label 'Revenue adjustment domestic (10%)';
        X4420: Label 'Revenue adjustment domestic (20%)';
        X4430: Label 'Revenue adjustment export';
        X4440: Label 'Revenue adjustment EU';
        X4450: Label 'Cash discount paid';
        X4455: Label 'Cash discount paid - adjustment';
        X4498: Label 'Total revenue adjustments';
        X4499: Label 'Total revenues and revenue reduction';
        X4500: Label 'Inventory changes';
        X4510: Label 'Inventory changes';
        X4580: Label 'Own cost capitalized';
        X4599: Label 'Total inventory changes';
        X4600: Label 'Other operating income';
        X4610: Label 'Proceeds from the sale of assets';
        X4620: Label 'Insurance compensations';
        X4630: Label 'Income from the disposal of assets';
        X4640: Label 'Income from the appreciation of intangible assets';
        X4650: Label 'Income from appreciation of fixed assets';
        X4700: Label 'Inc. from release of provisions for sever. paym.';
        X4710: Label 'Income from the release of prov. for pension plan';
        X4760: Label 'Income from the release of other provisions';
        X4800: Label 'Other operating income';
        X4810: Label 'Overage of cash';
        X4820: Label 'Benefit in kind';
        X4830: Label 'Rental yield';
        X4860: Label 'Expense reimbursement';
        X4870: Label 'FCY - unrealized exchange gains';
        X4880: Label 'FCY - realized exchange gains';
        X4890: Label 'Other insurance compensation';
        X4900: Label 'Income from release of loss reserves';
        X4997: Label 'Total other operating income';
        X4998: Label 'TOTAL OPERATING INCOME';
        X5000: Label 'COST OF MATERIALS';
        X5005: Label 'Trade goods';
        X5010: Label 'Trade goods consumption';
        X5020: Label 'Trade goods inventory adjustment';
        X5030: Label 'Trade goods direct cost';
        X5040: Label 'Trade goods overhead expenses';
        X5045: Label 'Trade goods purchase variance account';
        X5050: Label 'Discount received, trade';
        X5060: Label 'Delivery expenses, trade';
        X5070: Label 'Discount received, raw materials';
        X5080: Label 'Delivery expenses, raw material';
        X5099: Label 'Total trade goods';
        X5105: Label 'Raw material';
        X5110: Label 'Raw material consumption';
        X5120: Label 'Raw material inventory adjustment';
        X5130: Label 'Raw material direct cost';
        X5140: Label 'Raw material overhead expenses';
        X5145: Label 'Raw material purchase variance account';
        X5199: Label 'Total raw material';
        X5200: Label 'Processing';
        X5210: Label 'Processing consumption';
        X5230: Label 'Processing inventory adjustment';
        X5240: Label 'Processing overhead expenses';
        X5245: Label 'Processing purchase variance account';
        X5249: Label 'Total processing';
        X5250: Label 'Projects';
        X5260: Label 'Project costs';
        X5270: Label 'Project costs allocated';
        X5280: Label 'Project costs correction';
        X5299: Label 'Total projects';
        X5300: Label 'Variance';
        X5310: Label 'Material variance';
        X5320: Label 'Capacity variance';
        X5330: Label 'Subcontracted variance';
        X5340: Label 'Cap. overhead variance';
        X5350: Label 'Manufacturing overhead variance';
        X5399: Label 'Total variance';
        X5400: Label 'Consumption';
        X5410: Label 'Auxiliaries consumption';
        X5420: Label 'Packaging material consumption';
        X5430: Label 'Operating materials consumption';
        X5440: Label 'Cleaning materials consumption';
        X5450: Label 'Consumption of incidentals';
        X5460: Label 'Consumption of fuels';
        X5499: Label 'Total consumption';
        X5500: Label 'Purchase current material';
        X5510: Label 'Purchase trade domestic';
        X5520: Label 'Purchase trade import';
        X5530: Label 'Purchase trade EU';
        X5540: Label 'Purchase raw materials domestic';
        X5550: Label 'Purchase raw materials import';
        X5560: Label 'Purchase raw materials EU';
        X5599: Label 'Total purchase active material';
        X5700: Label 'Other services received';
        X5710: Label 'Services received';
        X5720: Label 'Service charges purchase';
        X5799: Label 'Total other services';
        X5800: Label 'Payment discount revenue';
        X5830: Label 'Payment discount revenue';
        X5835: Label 'Payment discount revenue - correction';
        X5899: Label 'Total payment discount revenue';
        X5998: Label 'TOTAL COST OF MATERIALS';
        X6000: Label 'PERSONNEL EXPENSES';
        X6005: Label 'Wages';
        X6010: Label 'Wages';
        X6040: Label 'Wages without services';
        X6199: Label 'Total wages';
        X6200: Label 'Salaries';
        X6210: Label 'Salaries';
        X6240: Label 'Salaries without services';
        X6399: Label 'Total salaries';
        X6400: Label 'Severance payments';
        X6410: Label 'Severance payments';
        X6420: Label 'Severance payment provision fund';
        X6450: Label 'Pensions payments';
        X6455: Label 'Pension provision fund';
        X6499: Label 'Total severance payments';
        X6500: Label 'Statutory social expenses';
        X6510: Label 'Statutory social expenses worker';
        X6550: Label 'Statutory social expenses employee';
        X6599: Label 'Total statutory social expenses';
        X6600: Label 'Other social expenses';
        X6610: Label 'Local tax';
        X6620: Label 'GD contribution family allowance (Profit)';
        X6630: Label 'Addition to profit';
        X6640: Label 'Levy for the employer Vienna';
        X6700: Label 'Voluntary social expenses';
        X6890: Label 'Cost center settlement';
        X6997: Label 'Total other social expenses';
        X6998: Label 'TOTAL PERSONNEL EXPENSES';
        X7000: Label 'DEPRECIATION,OTHER COST OF OPERATIONS';
        X7005: Label 'Depreciation';
        X7010: Label 'Scheduled amortization on intangible assets';
        X7020: Label 'Unscheduled amortization on intangible assets';
        X7030: Label 'Scheduled depreciation of fixed assets';
        X7040: Label 'Scheduled depreciation vehicles';
        X7050: Label 'Unscheduled depreciation of fixed assets';
        X7060: Label 'Low-value assets';
        X7099: Label 'Total depreciation';
        X7100: Label 'other taxes';
        X7110: Label 'Property tax';
        X7120: Label 'Beverage and alcohol tax';
        X7130: Label 'Charges and revenue stamps';
        X7140: Label 'CO2 Tax';
        X7150: Label 'Fuel Tax';
        X7160: Label 'Misc. other taxes';
        X7199: Label 'Total other taxes';
        X7200: Label 'Maintenance, cleaning, etc.';
        X7210: Label 'Third-party maintenance';
        X7220: Label 'Cleaning';
        X7230: Label 'Electricity and heating';
        X7240: Label 'Registration fees';
        X7250: Label 'Car operating expenses';
        X7260: Label 'Truck operating expenses';
        X7270: Label 'Car repairs and maintenance';
        X7280: Label 'Fuel';
        X7299: Label 'Total maintenance, etc.';
        X7300: Label 'Transportation, travel, communications';
        X7310: Label 'Transportation third parties';
        X7320: Label 'Travel expenses - domestic';
        X7330: Label 'Travel expenses - abroad';
        X7340: Label 'Kilometer allowance';
        X7350: Label 'Meal expenses domestic';
        X7360: Label 'Meal expenses abroad';
        X7370: Label 'Hotel expenses domestic';
        X7380: Label 'Hotel expenses abroad';
        X7390: Label 'Communication charges';
        X7399: Label 'Total transportation expenses';
        X7400: Label 'Rentals, leasing, ...';
        X7410: Label 'Rentals, leasing';
        X7499: Label 'Total rentals, leasing, etc.';
        X7500: Label 'Commissions';
        X7510: Label 'Commissions for third parties';
        X7599: Label 'Total commissions';
        X7600: Label 'Office, advertising and maintenance expenditure';
        X7610: Label 'Office supplies';
        X7620: Label 'Postage';
        X7630: Label 'Phone and internet charges';
        X7635: Label 'Software';
        X7636: Label 'External Services';
        X7637: Label 'Other computer expenses';
        X7650: Label 'Deductible advertising expenses';
        X7660: Label 'Non-deductible advertising expenses';
        X7680: Label 'Hospitality domestic deductible amount';
        X7681: Label 'Hospitality domestic non-deductible amount';
        X7682: Label 'Hospitality abroad deductible amount';
        X7683: Label 'Hospitality abroad non-deductible amount';
        X7690: Label 'Donations and tips';
        X7699: Label 'Total office/advertising/maintenance expenditure';
        X7700: Label 'Insurances and other expenses';
        X7710: Label 'Insurance expenses';
        X7720: Label 'Legal and consultancy expenses';
        X7730: Label 'Provision for legal and consultancy expenses fund';
        X7740: Label 'Other';
        X7760: Label 'Technical literature';
        X7770: Label 'Expenditure education and training';
        X7780: Label 'Chamber contribution';
        X7790: Label 'Expenses through circulation of money';
        X7800: Label 'Depreciation of supplies';
        X7810: Label 'Depreciation export receivables';
        X7812: Label 'Depreciation domestic receivables';
        X7815: Label 'Individual loss reserves for receivables ';
        X7818: Label 'Blanket loss reserves for receivables ';
        X7820: Label 'Book value disposal of assets';
        X7830: Label 'Losses from disposal of assets';
        X7850: Label 'Other operational expenditure';
        X7851: Label 'Provision for warranties fund';
        X7852: Label 'Provision for compensation for damages fund';
        X7853: Label 'Provision for product liability fund';
        X7854: Label 'Misc. provisions fund';
        X7855: Label 'Cash deficit';
        X7860: Label 'FCY - unrealized exchange losses';
        X7870: Label 'FCY - realized exchange losses';
        X7882: Label 'Payment discount revenue (0% VAT)';
        X7890: Label 'Cost center settlement';
        X7899: Label 'Total insurance and other expenditures';
        X7998: Label 'TOTAL DEPRECIATION, OPERATIONAL EXPENDITURE';
        X8000: Label 'FINANCIAL REVENUES AND EXPENDITURES';
        X8005: Label 'FINANCIAL REVENUES AND EXPENDITURES';
        X8010: Label 'Income from equity interests';
        X8020: Label 'Interest from bank deposits';
        X8030: Label 'Interest from loans granted';
        X8040: Label 'Pass through discount rates';
        X8050: Label 'Income from default interest and expenses';
        X8060: Label 'Invoice rounding';
        X8070: Label 'Application rounding';
        X8090: Label 'Other interest income';
        X8100: Label 'Interest income from fixed-rate securities';
        X8140: Label 'Other securities income';
        X8150: Label 'Proceeds from the disp. of other financial assets';
        X8160: Label 'Payment tolerance received';
        X8170: Label 'Pmt. tol. received decreases - correction';
        X8180: Label 'Income from appreciation of financial assets';
        X8185: Label 'Income from appreciation of marketable securities';
        X8260: Label 'Depreciation other financial assets';
        X8265: Label 'Depreciation of marketable securities';
        X8270: Label 'Loss from disposal of other financial assets';
        X8280: Label 'Interest expense for bank loans';
        X8285: Label 'Unscheduled depreciation of financial assets';
        X8290: Label 'Interest expenditure for loans';
        X8300: Label 'Depreciation activated funds acquisition cost';
        X8310: Label 'Discount interest - expenditure';
        X8320: Label 'Default interest - expenses';
        X8340: Label 'Payment discounts granted';
        X8350: Label 'unused delivery discounts';
        X8360: Label 'Payment tolerance granted';
        X8370: Label 'Pmt. Tol. Granted Decreases - correction';
        X8399: Label 'Total financial income and expenses';
        X8400: Label 'Non-recurring income,Non-recurring expenses';
        X8410: Label 'Non-recurring income ';
        X8450: Label 'Non-recurring expenses';
        X8497: Label 'Extraordinary income';
        X8500: Label 'Taxes before income and earnings';
        X8510: Label 'Corporate tax';
        X8520: Label 'Capital returns tax';
        X8597: Label 'Total tax before income';
        X8600: Label 'Changes in reserves';
        X8610: Label 'Gains from reversal of untaxed reserves';
        X8630: Label 'Gains from reversal of valuation reserves';
        X8810: Label 'Assignment Reserves according to § 10 EStG (IFB)';
        X8820: Label 'Assignment RL according to § 12 EStG';
        X8830: Label 'Assignment to valuation reserves';
        X8897: Label 'Total change in reserves';
        X8998: Label 'TOTAL FINANCIAL INCOME AND EXPENSES';
        X9000: Label 'EQUITY, RESERVES, ...';
        X9010: Label 'Equity';
        X9020: Label 'Tax provisions';
        X9350: Label 'Free reserves';
        X9390: Label 'Net profit/net loss';
        X9400: Label 'Valuation reserves for...';
        X9510: Label 'Reserves according to § 10 EStG (IFB)';
        X9520: Label 'Reserves according to § 12 EStG';
        X9600: Label 'Private';
        X9800: Label 'EBK';
        X9850: Label 'SBK';
        X9890: Label 'Profit and loss statement';
        X9999: Label 'TOTAL EQUITY, RESERVES';

    procedure InsertMiniAppData()
    begin
        AddIncomeStatementForMini();
        AddBalanceSheetForMini();

        GLAccIndent.Indent();
    end;

    local procedure AddIncomeStatementForMini()
    begin
        // Income statement 1000-4999
        DemoDataSetup.Get();
        InsertData('0000', X0000, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('0005', X0005, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('0010', X0010, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0090', X0090, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0099', X0099, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('0100', X0100, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('0110', X0110, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0120', X0120, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0130', X0130, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0150', X0150, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0180', X0180, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0190', X0190, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0199', X0199, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('0200', X0200, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('0210', X0210, 0, 1, 0, '', 0, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('0220', X0220, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0230', X0230, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0240', X0240, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0260', X0260, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0290', X0290, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0300', X0300, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0399', X0399, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('0400', X0400, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('0410', X0410, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0450', X0450, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0490', X0490, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0500', X0500, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0510', X0510, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0520', X0520, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0530', X0530, 0, 1, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('0540', X0540, 0, 1, 0, '', 2, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('0550', X0550, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0629', X0629, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('0630', X0630, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('0640', X0640, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0645', X0645, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0650', X0650, 0, 1, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('0660', X0660, 0, 1, 0, '', 2, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('0670', X0670, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0679', X0679, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('0680', X0680, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('0690', X0690, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0695', X0695, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0699', X0699, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('0700', X0700, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('0710', X0710, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0720', X0720, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0790', X0790, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0799', X0799, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('0800', X0800, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('0810', X0810, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0820', X0820, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0900', X0900, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0910', X0910, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0920', X0920, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0930', X0930, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0940', X0940, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0950', X0950, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('0995', X0995, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('0998', X0998, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1000', X1000, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1005', X1005, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1010', X1010, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1020', X1020, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1099', X1099, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1100', X1100, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1110', X1110, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1120', X1120, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1130', X1130, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1199', X1199, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1200', X1200, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1210', X1210, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1299', X1299, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1300', X1300, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1310', X1310, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1320', X1320, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1330', X1330, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1399', X1399, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1400', X1400, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1410', X1410, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1420', X1420, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1421', X1421, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1430', X1430, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1431', X1431, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1499', X1499, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1500', X1500, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1510', X1510, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1520', X1520, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1599', X1599, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1600', X1600, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1610', X1610, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1620', X1620, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1630', X1630, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1699', X1699, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1700', X1700, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1710', X1710, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1799', X1799, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1800', X1800, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1810', X1810, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('1899', X1899, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('1998', X1998, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2000', X2000, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2001', X2001, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2005', X2005, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2010', X2010, 0, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2020', X2020, 0, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2030', X2030, 0, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2040', X2040, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2050', X2050, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2070', X2070, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2080', X2080, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2090', X2090, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2100', X2100, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2180', X2180, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2190', X2190, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2200', X2200, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2280', X2280, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2290', X2290, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2300', X2300, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2350', X2350, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2390', X2390, 0, 1, 0, '', 2, DemoDataSetup.DomesticCode(), DemoDataSetup.ServicesCode(), '', '', true);
        InsertData('2499', X2499, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2500', X2500, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2510', X2510, 0, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2520', X2520, 0, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2530', X2530, 0, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2540', X2540, 0, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2550', X2550, 0, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2560', X2560, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2570', X2570, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2598', X2598, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2599', X2599, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2600', X2600, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2650', X2650, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2680', X2680, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2699', X2699, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2700', X2700, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2710', X2710, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2730', X2730, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2740', X2740, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2770', X2770, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2780', X2780, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2790', X2790, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2800', X2800, 0, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2810', X2810, 0, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2820', X2820, 0, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2899', X2899, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2900', X2900, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2910', X2910, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2950', X2950, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('2995', X2995, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('2998', X2998, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3000', X3000, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3005', X3005, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3010', X3010, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3020', X3020, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3030', X3030, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3060', X3060, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3070', X3070, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3080', X3080, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3099', X3099, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3100', X3100, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3110', X3110, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3120', X3120, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3150', X3150, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3160', X3160, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3170', X3170, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3199', X3199, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3200', X3200, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3210', X3210, 0, 1, 0, '', 2, DemoDataSetup.DomesticCode(), DemoDataSetup.ServicesCode(), '', '', true);
        InsertData('3220', X3220, 0, 1, 0, '', 2, DemoDataSetup.DomesticCode(), DemoDataSetup.ServicesCode(), '', '', true);
        InsertData('3230', X3230, 0, 1, 0, '', 2, DemoDataSetup.DomesticCode(), DemoDataSetup.ServicesCode(), '', '', true);
        InsertData('3290', X3290, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3300', X3300, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3310', X3310, 0, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3320', X3320, 0, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3330', X3330, 0, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3360', X3360, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3370', X3370, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3499', X3499, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3500', X3500, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3510', X3510, 0, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3520', X3520, 0, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3530', X3530, 0, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3540', X3540, 0, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3550', X3550, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3560', X3560, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3570', X3570, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3580', X3580, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3599', X3599, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3600', X3600, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3610', X3610, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3620', X3620, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3630', X3630, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3640', X3640, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3650', X3650, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3660', X3660, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3670', X3670, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3699', X3699, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3700', X3700, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3710', X3710, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3900', X3900, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('3997', X3997, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('3998', X3998, 4, 1, 0, '', 0, '', '', '', '', false);
        InsertData('4000', X4000, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4005', X4005, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4006', X4006, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4007', X4007, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4010', X4010, 0, 0, 0, '', 2, DemoDataSetup.DomesticCode(), DemoDataSetup.RetailCode(), '', '', true);
        InsertData('4020', X4020, 0, 0, 0, '', 2, DemoDataSetup.ExportCode(), DemoDataSetup.RetailCode(), '', '', true);
        InsertData('4030', X4030, 0, 0, 0, '', 2, DemoDataSetup.EUCode(), DemoDataSetup.RetailCode(), '', '', true);
        InsertData('4040', X4040, 0, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4050', X4050, 0, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4099', X4099, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4100', X4100, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4110', X4110, 0, 0, 0, '', 2, DemoDataSetup.DomesticCode(), DemoDataSetup.RetailCode(), '', '', true);
        InsertData('4120', X4120, 0, 0, 0, '', 2, DemoDataSetup.ExportCode(), DemoDataSetup.RetailCode(), '', '', true);
        InsertData('4130', X4130, 0, 0, 0, '', 2, DemoDataSetup.EUCode(), DemoDataSetup.RetailCode(), '', '', true);
        InsertData('4199', X4199, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4200', X4200, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4210', X4210, 0, 0, 0, '', 2, DemoDataSetup.DomesticCode(), DemoDataSetup.ServicesCode(), '', '', true);
        InsertData('4220', X4220, 0, 0, 0, '', 2, DemoDataSetup.ExportCode(), DemoDataSetup.ServicesCode(), '', '', true);
        InsertData('4230', X4230, 0, 0, 0, '', 2, DemoDataSetup.EUCode(), DemoDataSetup.ServicesCode(), '', '', true);
        InsertData('4239', X4239, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4240', X4240, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4250', X4250, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4260', X4260, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4269', X4269, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4270', X4270, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4280', X4280, 0, 0, 0, '', 2, DemoDataSetup.DomesticCode(), DemoDataSetup.ServicesCode(), '', '', true);
        InsertData('4299', X4299, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4300', X4300, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4310', X4310, 0, 0, 0, '', 2, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('4315', XFeesandChargesRecEUTxt, 0, 0, 0, '', 2, DemoDataSetup.EUCode(), DemoDataSetup.FreightCode(), '', '', true);
        InsertData('4320', X4320, 0, 0, 0, '', 2, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('4330', X4330, 0, 0, 0, '', 2, DemoDataSetup.DomesticCode(), DemoDataSetup.ServicesCode(), '', '', true);
        InsertData('4395', X4395, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4396', X4396, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4400', X4400, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4410', X4410, 0, 0, 0, '', 2, DemoDataSetup.DomesticCode(), DemoDataSetup.RetailCode(), '', '', true);
        InsertData('4420', X4420, 0, 0, 0, '', 2, DemoDataSetup.DomesticCode(), DemoDataSetup.RetailCode(), '', '', true);
        InsertData('4430', X4430, 0, 0, 0, '', 2, DemoDataSetup.ExportCode(), DemoDataSetup.RetailCode(), '', '', true);
        InsertData('4440', X4440, 0, 0, 0, '', 2, DemoDataSetup.EUCode(), DemoDataSetup.RetailCode(), '', '', true);
        InsertData('4450', X4450, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4455', X4455, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4498', X4498, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4499', X4499, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4500', X4500, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4510', X4510, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4580', X4580, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4599', X4599, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4600', X4600, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4610', X4610, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4620', X4620, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4630', X4630, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4640', X4640, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4650', X4650, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4700', X4700, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4710', X4710, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4760', X4760, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4800', X4800, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4810', X4810, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4820', X4820, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4830', X4830, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4860', X4860, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4870', X4870, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4880', X4880, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4890', X4890, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4900', X4900, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('4997', X4997, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('4998', X4998, 4, 0, 0, '', 0, '', '', '', '', false);
    end;

    procedure AddBalanceSheetForMini()
    begin
        // Balance sheet 5000-9999
        DemoDataSetup.Get();
        InsertData('5000', X5000, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5005', X5005, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5010', X5010, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5020', X5020, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5030', X5030, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5040', X5040, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5045', X5045, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5050', X5050, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5060', X5060, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5070', X5070, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5080', X5080, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5099', X5099, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5105', X5105, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5110', X5110, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5120', X5120, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5130', X5130, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5140', X5140, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5145', X5145, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5199', X5199, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5200', X5200, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5210', X5210, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5230', X5230, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5240', X5240, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5245', X5245, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5249', X5249, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5250', X5250, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5260', X5260, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5270', X5270, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5280', X5280, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5299', X5299, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5300', X5300, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5310', X5310, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5320', X5320, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5330', X5330, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5340', X5340, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5350', X5350, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5399', X5399, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5400', X5400, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5410', X5410, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5420', X5420, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5430', X5430, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5440', X5440, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5450', X5450, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5460', X5460, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5499', X5499, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5500', X5500, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5510', X5510, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.RetailCode(), '', '', true);
        InsertData('5520', X5520, 0, 0, 0, '', 1, DemoDataSetup.ExportCode(), DemoDataSetup.RetailCode(), '', '', true);
        InsertData('5530', X5530, 0, 0, 0, '', 1, DemoDataSetup.EUCode(), DemoDataSetup.RetailCode(), '', '', true);
        InsertData('5540', X5540, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.RetailCode(), '', '', true);
        InsertData('5550', X5550, 0, 0, 0, '', 1, DemoDataSetup.ExportCode(), DemoDataSetup.RetailCode(), '', '', true);
        InsertData('5560', X5560, 0, 0, 0, '', 1, DemoDataSetup.EUCode(), DemoDataSetup.RetailCode(), '', '', true);
        InsertData('5599', X5599, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5700', X5700, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5710', X5710, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('5720', X5720, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('5799', X5799, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5800', X5800, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5830', X5830, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5835', X5835, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('5899', X5899, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('5998', X5998, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('6000', X6000, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('6005', X6005, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('6010', X6010, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('6040', X6040, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('6199', X6199, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('6200', X6200, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('6210', X6210, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('6240', X6240, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('6399', X6399, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('6400', X6400, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('6410', X6410, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('6420', X6420, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('6450', X6450, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('6455', X6455, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('6499', X6499, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('6500', X6500, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('6510', X6510, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('6550', X6550, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('6599', X6599, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('6600', X6600, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('6610', X6610, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('6620', X6620, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('6630', X6630, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('6640', X6640, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('6700', X6700, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('6890', X6890, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('6997', X6997, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('6998', X6998, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('7000', X7000, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('7005', X7005, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('7010', X7010, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7020', X7020, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7030', X7030, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7040', X7040, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7050', X7050, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7060', X7060, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7099', X7099, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('7100', X7100, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('7110', X7110, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7120', X7120, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7130', X7130, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7140', X7140, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7150', X7150, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7160', X7160, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7199', X7199, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('7200', X7200, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('7210', X7210, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7220', X7220, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7230', X7230, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7240', X7240, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7250', X7250, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7260', X7260, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7270', X7270, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7280', X7280, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7299', X7299, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('7300', X7300, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('7310', X7310, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7320', X7320, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7330', X7330, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7340', X7340, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7350', X7350, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7360', X7360, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7370', X7370, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7380', X7380, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7390', X7390, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7399', X7399, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('7400', X7400, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('7410', X7410, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7499', X7499, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('7500', X7500, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('7510', X7510, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7599', X7599, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('7600', X7600, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('7610', X7610, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7620', X7620, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7630', X7630, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7635', X7635, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7636', X7636, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7637', X7637, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7650', X7650, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7660', X7660, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.NoVATCode(), '', '', true);
        InsertData('7680', X7680, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7681', X7681, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7682', X7682, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7683', X7683, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7690', X7690, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7699', X7699, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('7700', X7700, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('7710', X7710, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7720', X7720, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7730', X7730, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7740', X7740, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7760', X7760, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7770', X7770, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7780', X7780, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7790', X7790, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7800', X7800, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7810', X7810, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7812', X7812, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7815', X7815, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7818', X7818, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7820', X7820, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7830', X7830, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7850', X7850, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.MiscCode(), '', '', true);
        InsertData('7851', X7851, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7852', X7852, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7853', X7853, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7854', X7854, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7855', X7855, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7860', X7860, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7870', X7870, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7882', X7882, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7890', X7890, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('7899', X7899, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('7998', X7998, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('8000', X8000, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('8005', X8005, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('8010', X8010, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8020', X8020, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8030', X8030, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8040', X8040, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8050', X8050, 0, 0, 0, '', 2, DemoDataSetup.DomesticCode(), DemoDataSetup.NoVATCode(), '', '', true);
        InsertData('8060', X8060, 0, 0, 0, '', 2, DemoDataSetup.DomesticCode(), DemoDataSetup.NoVATCode(), '', '', true);
        InsertData('8070', X8070, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8090', X8090, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8100', X8100, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8140', X8140, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8150', X8150, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8160', X8160, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8170', X8170, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8180', X8180, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8185', X8185, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8260', X8260, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8265', X8265, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8270', X8270, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8280', X8280, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8285', X8285, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8290', X8290, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8300', X8300, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8310', X8310, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8320', X8320, 0, 0, 0, '', 1, DemoDataSetup.DomesticCode(), DemoDataSetup.NoVATCode(), '', '', true);
        InsertData('8340', X8340, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8350', X8350, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8360', X8360, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8370', X8370, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8399', X8399, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('8400', X8400, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('8410', X8410, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8450', X8450, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8497', X8497, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('8500', X8500, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('8510', X8510, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8520', X8520, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8597', X8597, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('8600', X8600, 3, 0, 0, '', 0, '', '', '', '', false);
        InsertData('8610', X8610, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8630', X8630, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8810', X8810, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8820', X8820, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8830', X8830, 0, 0, 0, '', 0, '', '', '', '', true);
        InsertData('8897', X8897, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('8998', X8998, 4, 0, 0, '', 0, '', '', '', '', false);
        InsertData('9000', X9000, 3, 1, 0, '', 0, '', '', '', '', false);
        InsertData('9010', X9010, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('9020', X9020, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('9350', X9350, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('9390', X9390, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('9400', X9400, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('9510', X9510, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('9520', X9520, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('9600', X9600, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('9800', X9800, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('9850', X9850, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('9890', X9890, 0, 1, 0, '', 0, '', '', '', '', true);
        InsertData('9999', X9999, 4, 1, 0, '', 0, '', '', '', '', false);
    end;

    procedure InsertData(AccountNo: Code[20]; AccountName: Text[50]; AccountType: Option; IncomeBalance: Option; NoOfBlankLines: Integer; Totaling: Text[250]; GenPostingType: Option; GenBusPostingGroup: Code[20]; GenProdPostingGroup: Code[20]; VATGenPostingGroup: Code[20]; VATProdPostingGroup: Code[20]; DirectPosting: Boolean)
    var
        GLAccount: Record "G/L Account";
    begin
        GLAccount.Init();
        GLAccount.Validate("No.", AccountNo);
        GLAccount.Validate(Name, AccountName);
        GLAccount.Validate("Account Type", AccountType);
        if GLAccount."Account Type" = GLAccount."Account Type"::Posting then
            GLAccount.Validate("Direct Posting", DirectPosting);
        GLAccount.Validate("Income/Balance", "G/L Account Report Type".FromInteger(IncomeBalance));
        case AccountNo of
            '2710', '2800', '2810', '2820':
                GLAccount."Reconciliation Account" := true;
            '39998':
                GLAccount."New Page" := true;
        end;
        GLAccount.Validate("No. of Blank Lines", NoOfBlankLines);
        if Totaling <> '' then
            GLAccount.Validate(Totaling, Totaling);
        if GenPostingType > 0 then
            GLAccount.Validate("Gen. Posting Type", GenPostingType);
        if GenBusPostingGroup <> '' then
            GLAccount.Validate("Gen. Bus. Posting Group", GenBusPostingGroup);
        if GenProdPostingGroup <> '' then
            GLAccount.Validate("Gen. Prod. Posting Group", GenProdPostingGroup);
        if VATGenPostingGroup <> '' then
            GLAccount.Validate("VAT Bus. Posting Group", VATGenPostingGroup);
        if VATProdPostingGroup <> '' then
            GLAccount.Validate("VAT Prod. Posting Group", VATProdPostingGroup);
        GLAccount.Insert();
    end;

    procedure AddCategoriesToGLAccounts()
    var
        GLAccountCategory: Record "G/L Account Category";
    begin
        if GLAccountCategory.IsEmpty() then
            exit;

        GLAccountCategory.SetRange("Parent Entry No.", 0);
        if GLAccountCategory.FindSet() then
            repeat
                AssignCategoryToChartOfAccounts(GLAccountCategory);
                AssignCategoryToLocalChartOfAccounts(GLAccountCategory);
            until GLAccountCategory.Next() = 0;

        GLAccountCategory.SetFilter("Parent Entry No.", '<>%1', 0);
        if GLAccountCategory.FindSet() then
            repeat
                AssignSubcategoryToChartOfAccounts(GLAccountCategory);
                AssignSubcategoryToLocalChartOfAccounts(GLAccountCategory);
            until GLAccountCategory.Next() = 0;
    end;

    procedure AssignCategoryToChartOfAccounts(GLAccountCategory: Record "G/L Account Category")
    begin
        case GLAccountCategory."Account Category" of
            GLAccountCategory."Account Category"::Assets:
                UpdateGLAccounts(GLAccountCategory, '0000', '2998');
            GLAccountCategory."Account Category"::Liabilities:
                UpdateGLAccounts(GLAccountCategory, '3000', '3998');
            GLAccountCategory."Account Category"::Equity:
                begin
                    UpdateGLAccounts(GLAccountCategory, '9000', '9890');
                    UpdateGLAccounts(GLAccountCategory, '9999', '9999');
                end;
            GLAccountCategory."Account Category"::Income:
                begin
                    UpdateGLAccounts(GLAccountCategory, '4000', '4498');
                    UpdateGLAccounts(GLAccountCategory, '4998', '4998');
                    UpdateGLAccounts(GLAccountCategory, '995795', '996959');
                end;
            GLAccountCategory."Account Category"::"Cost of Goods Sold":
                UpdateGLAccounts(GLAccountCategory, '5000', '5998');
            GLAccountCategory."Account Category"::Expense:
                begin
                    UpdateGLAccounts(GLAccountCategory, '4499', '4997');
                    UpdateGLAccounts(GLAccountCategory, '6000', '8998');
                end;
        end;
    end;

    procedure AssignSubcategoryToChartOfAccounts(GLAccountCategory: Record "G/L Account Category")
    var
        GLAccountCategoryMgt: Codeunit "G/L Account Category Mgt.";
    begin
        case GLAccountCategory.Description of
            GLAccountCategoryMgt.GetCurrentAssets():
                ;
            GLAccountCategoryMgt.GetCash():
                UpdateGLAccounts(GLAccountCategory, '2700', '2899');
            GLAccountCategoryMgt.GetAR():
                UpdateGLAccounts(GLAccountCategory, '2000', '2599');
            GLAccountCategoryMgt.GetPrepaidExpenses():
                ;
            GLAccountCategoryMgt.GetInventory():
                UpdateGLAccounts(GLAccountCategory, '1000', '1998');
            GLAccountCategoryMgt.GetEquipment():
                ;
            GLAccountCategoryMgt.GetAccumDeprec():
                ;
            GLAccountCategoryMgt.GetCurrentLiabilities():
                begin
                    UpdateGLAccounts(GLAccountCategory, '3000', '3099');
                    UpdateGLAccounts(GLAccountCategory, '3200', '3599');
                    UpdateGLAccounts(GLAccountCategory, '3700', '3998');
                end;
            GLAccountCategoryMgt.GetPayrollLiabilities():
                UpdateGLAccounts(GLAccountCategory, '3600', '3699');
            GLAccountCategoryMgt.GetLongTermLiabilities():
                UpdateGLAccounts(GLAccountCategory, '3100', '3199');
            GLAccountCategoryMgt.GetCommonStock():
                begin
                    UpdateGLAccounts(GLAccountCategory, '9000', '9890');
                    UpdateGLAccounts(GLAccountCategory, '9999', '9999');
                end;
            GLAccountCategoryMgt.GetIncomeService():
                begin
                    UpdateGLAccounts(GLAccountCategory, '4000', '4099');
                    UpdateGLAccounts(GLAccountCategory, '4200', '4299');
                    UpdateGLAccounts(GLAccountCategory, '995795', '996959');
                end;
            GLAccountCategoryMgt.GetIncomeProdSales():
                UpdateGLAccounts(GLAccountCategory, '4100', '4199');
            GLAccountCategoryMgt.GetIncomeSalesDiscounts():
                UpdateGLAccounts(GLAccountCategory, '4400', '4498');
            GLAccountCategoryMgt.GetIncomeSalesReturns():
                ;
            GLAccountCategoryMgt.GetIncomeInterest():
                UpdateGLAccounts(GLAccountCategory, '4300', '4395');
            GLAccountCategoryMgt.GetCOGSLabor():
                ;
            GLAccountCategoryMgt.GetCOGSMaterials():
                UpdateGLAccounts(GLAccountCategory, '5000', '5998');
            GLAccountCategoryMgt.GetRentExpense():
                ;
            GLAccountCategoryMgt.GetAdvertisingExpense():
                ;
            GLAccountCategoryMgt.GetInterestExpense():
                UpdateGLAccounts(GLAccountCategory, '8000', '8399');
            GLAccountCategoryMgt.GetFeesExpense():
                ;
            GLAccountCategoryMgt.GetInsuranceExpense():
                ;
            GLAccountCategoryMgt.GetPayrollExpense():
                UpdateGLAccounts(GLAccountCategory, '6000', '6998');
            GLAccountCategoryMgt.GetBenefitsExpense():
                ;
            GLAccountCategoryMgt.GetRepairsExpense():
                ;
            GLAccountCategoryMgt.GetUtilitiesExpense():
                UpdateGLAccounts(GLAccountCategory, '7600', '7699');
            GLAccountCategoryMgt.GetOtherIncomeExpense():
                begin
                    UpdateGLAccounts(GLAccountCategory, '4499', '4997');
                    UpdateGLAccounts(GLAccountCategory, '7000', '7599');
                    UpdateGLAccounts(GLAccountCategory, '7700', '7998');
                end;
        end;
    end;

    local procedure UpdateGLAccounts(GLAccountCategory: Record "G/L Account Category"; FromGLAccountNo: Code[20]; ToGLAccountNo: Code[20])
    var
        GLAccount: Record "G/L Account";
    begin
        if not TryGetGLAccountNoRange(GLAccount, FromGLAccountNo, ToGLAccountNo) then
            exit;

        GLAccount.ModifyAll("Account Category", GLAccountCategory."Account Category", false);
        GLAccount.ModifyAll("Account Subcategory Entry No.", GLAccountCategory."Entry No.", false);
    end;

    [TryFunction]
    local procedure TryGetGLAccountNoRange(var GLAccount: Record "G/L Account"; FromGLAccountNo: Code[20]; ToGLAccountNo: Code[20])
    var
        MakeAdjustments: Codeunit "Make Adjustments";
    begin
        GLAccount.SetRange("No.", MakeAdjustments.Convert(FromGLAccountNo), MakeAdjustments.Convert(ToGLAccountNo));
    end;

    local procedure AssignCategoryToLocalChartOfAccounts(GLAccountCategory: Record "G/L Account Category")
    begin
        GLAccountCategory.Find();
        // Reserved for local chart of accounts
    end;

    local procedure AssignSubcategoryToLocalChartOfAccounts(GLAccountCategory: Record "G/L Account Category")
    begin
        GLAccountCategory.Find();
        // Reserved for local chart of accounts
    end;
}

